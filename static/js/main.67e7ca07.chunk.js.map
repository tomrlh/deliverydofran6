{"version":3,"sources":["containers/OrderContainer.js","components/Banner.js","containers/ProductsContainer.js","components/AdditionalsModal.js","components/ProductCard.js","components/AddressLoader.js","components/Toast.js","components/FinishOrderModal.js","components/Bag.js","components/IntroMessage.js","App.js","serviceWorker.js","index.js"],"names":["OrderContainer","state","orderDetails","cep","logradouro","numero","bairro","cidade","complemento","bag","total","companyTitle","companyDescription","companyContact","orderOwner","price","parseInt","replace","item","this","setState","concat","additionals","id","itemToUpdate","filter","map","itemToRemove","addressPlaceholder","textoFormatado","forEach","add","name","totalOrder","qtt","itens","formatAdditionals","Date","toLocaleString","timeZone","getTotalOrder","Container","Banner","message","address","textStyle","color","textShadow","to","orderContainer","Carousel","className","Item","Image","src","alt","Caption","Header","as","icon","textAlign","style","Content","React","Component","ProductsContainer","mostrarDetalhesModal","products","description","image","link","addressLink","AdditionalsModal","open","handleOpen","modalOpen","handleClose","additional","newAddArr","length","push","productContainer","Modal","size","onClose","trigger","Button","basic","onClick","Description","Segment","overflow","maxHeight","Table","striped","Body","Row","Cell","value","displayType","prefix","thousandSeparator","decimalSeparator","fixedDecimalScale","decimalScale","renderText","Group","addToAdditional","Or","text","showQuantity","subtractFromAdditional","Actions","content","addToBag","props","console","log","showAlert","ProductCard","Card","width","product","wrapped","ui","Meta","extra","AddressLoader","preencherPeloCep","onChangeCheckbox","evt","data","checked","fetch","response","json","endereco","setCep","setLogradouro","setBairro","setCidade","localidade","Icon","Form","Field","Checkbox","label","Input","inverted","circular","e","findAddressByCep","placeholder","onChange","target","onKeyPress","key","disabled","setNumero","setComplemento","Toast","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","FinishOrderModal","event","setOrderOwner","TextArea","setOrderDetails","negative","isEnderecoPreenchido","window","getOrderLink","clearOrder","Bag","HeaderCell","sumAdditionalsTotal","removeFromBag","toast","info","progress","undefined","IntroMessage","Message","List","App","success","productsContainer","centered","index","orderAdded","Divider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.67e7ca07.chunk.js","sourcesContent":["import { Container } from \"unstated\";\n\nclass OrderContainer extends Container {\n  state = {\n    orderDetails: \"\",\n    cep: \"\",\n    logradouro: \"\",\n    numero: \"\",\n    bairro: \"\",\n    cidade: \"\",\n    complemento: \"\",\n    bag: [],\n    total: 0,\n    companyTitle: \"Delivery do Fran6\",\n    companyDescription: \"Rua Janary Nunes 815, Infraero 1, Macapá-AP\",\n    companyContact: \"5541998943368\",\n    orderOwner: \"\",\n  };\n\n  formatPrice(price) {\n    return parseInt(price.replace(\",\", \".\"), 10);\n  }\n\n  addToBag(item) {\n    this.setState((state) => {\n      const newBag = state.bag.concat(item);\n      const newTotal = (state.total += item.price);\n      return {\n        bag: newBag,\n        total: newTotal,\n      };\n    });\n  }\n\n  addAdditionalsToItem(additionals, id) {\n    let itemToUpdate = this.state.bag.filter((item) => item.id == id);\n\n    itemToUpdate.additionals = additionals;\n\n    let items = this.state.bag.map((item) => {\n      if ((item.id = id)) item = itemToUpdate;\n      return item;\n    });\n  }\n  removeFromBag(itemToRemove) {\n    this.setState((state) => {\n      const newBag = state.bag.filter((item) => item.id != itemToRemove.id);\n      const newTotal = (state.total -= itemToRemove.price);\n      return {\n        bag: newBag,\n        total: newTotal,\n      };\n    });\n  }\n  clearOrder() {\n    this.setState({\n      bag: [],\n      orderOwner: \"\",\n      orderDetails: \"\",\n      addressPlaceholder: \"Adicione o endereço de entrega..\",\n    });\n  }\n\n  setOrderDetails(orderDetails) {\n    this.setState({ orderDetails });\n  }\n  setOrderOwner(orderOwner) {\n    this.setState({ orderOwner });\n  }\n  setCep(cep) {\n    this.setState({ cep });\n  }\n  setComplemento(complemento) {\n    this.setState({ complemento });\n  }\n  setNumero(numero) {\n    this.setState({ numero });\n  }\n  setLogradouro(logradouro) {\n    this.setState({ logradouro });\n  }\n  setBairro(bairro) {\n    this.setState({ bairro });\n  }\n  setCidade(cidade) {\n    this.setState({ cidade });\n  }\n  isEnderecoPreenchido() {\n    return (\n      this.state.complemento &&\n      this.state.numero &&\n      this.state.logradouro &&\n      this.state.bairro &&\n      this.state.cidade\n    );\n  }\n  formatAdditionals(additionals) {\n    let textoFormatado = \"\";\n\n    if (additionals) {\n      textoFormatado = \" com adicionais de: \";\n      additionals.forEach((add) => {\n        textoFormatado += add.name + \", \";\n      });\n    }\n    return textoFormatado;\n  }\n\n  getTotalOrder() {\n    let totalOrder = 0;\n    this.state.bag.forEach((item) => {\n      totalOrder += item.price;\n      item.additionals.forEach((add) => {\n        totalOrder += add.price * add.qtt;\n      });\n    });\n    return totalOrder;\n  }\n\n  getOrderLink() {\n    let itens = \"\";\n\n    this.state.bag.forEach(\n      (item) => (itens += item.name + this.formatAdditionals(item.additionals))\n    );\n    return (\n      \"https://wa.me/\" +\n      this.state.companyContact +\n      `?text=Pedido para *${this.state.orderOwner}*: ` +\n      itens +\n      \"%0a\" +\n      `*Endereço*%0a` +\n      `*CEP*: ${this.state.cep}%0a` +\n      `*Cidade*: ${this.state.cidade}%0a` +\n      `*Logradouro*: ${this.state.logradouro}%0a` +\n      `*Bairro*: ${this.state.bairro}%0a` +\n      `*Número*: ${this.state.numero}%0a` +\n      `*Complemento*: ${this.state.complemento}%0a` +\n      `*Pedido as*: ${new Date(\n        new Date().toLocaleString(\"pt-BR\", { timeZone: \"America/Sao_Paulo\" })\n      )}%0a` +\n      `*Total*: R$ ${this.getTotalOrder()}%0a` +\n      `*OBS*: ${this.state.orderDetails}%0a`\n    );\n  }\n}\n\nexport default OrderContainer;\n","import React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport { Header, Image } from \"semantic-ui-react\";\nimport { Subscribe } from \"unstated\";\nimport OrderContainer from \"../containers/OrderContainer\";\n\nclass Banner extends React.Component {\n  state = {\n    message: \"ovni\",\n    address: \"https://goo.gl/maps/KQ5dSCDLqy2Bv8pU7\",\n  };\n\n  render() {\n    const textStyle = { color: \"white\", textShadow: \"2px 2px #636363\" };\n\n    return (\n      <Subscribe to={[OrderContainer]}>\n        {(orderContainer) => (\n          <div>\n            <Carousel className=\"test\">\n              <Carousel.Item>\n                <Image src=\"img/banner.jpeg\" alt=\"Delivery do Fran6\" />\n                <Carousel.Caption>\n                  <Header as=\"h1\" icon textAlign=\"center\" style={textStyle}>\n                    <Header.Content>\n                      {orderContainer.state.companyTitle}\n                    </Header.Content>\n                  </Header>\n                </Carousel.Caption>\n              </Carousel.Item>\n            </Carousel>\n            <br />\n          </div>\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nexport default Banner;\n","import { Container } from \"unstated\";\n\nclass ProductsContainer extends Container {\n  state = {\n    mostrarDetalhesModal: false,\n    products: [\n      {\n        id: \"asteroide\",\n        name: \"Asteroide\",\n        description: \"2 X-Larica, 500g batata, cheddar, 1 coca litro\",\n        price: 25.0,\n        image: \"img/products/asteroide.jpeg\",\n        link: \"#\",\n        color: \"red\",\n      },\n      {\n        id: \"cometa\",\n        name: \"Cometa\",\n        description: \"4 X-Larica, 500g batata, cheddar, 1 coca litro\",\n        price: 35.0,\n        image: \"img/products/cometa.jpeg\",\n        link: \"#\",\n        color: \"green\",\n      },\n      {\n        id: \"espacial\",\n        name: \"Espacial\",\n        description:\n          \"2 Super X-Larica, 500g batata, bacon, cheddar, calabresa acebolada, 1 coca litro\",\n        price: 40.0,\n        image: \"img/products/espacial.jpeg\",\n        link: \"#\",\n        color: \"violet\",\n      },\n      {\n        id: \"ovni\",\n        name: \"OVNI\",\n        description:\n          \"Batata frita, anéis de Saturno (cebola empanada), cheddar, cream cheese, bacon, calabresa acebolada, 1 coca litro\",\n        price: 35.0,\n        image: \"img/products/ovni.jpeg\",\n        link: \"#\",\n        color: \"orange\",\n      },\n    ],\n    additionals: [\n      {\n        id: \"calabresa\",\n        name: \"calabresa\",\n        price: 2.0,\n        qtt: 0,\n      },\n      {\n        id: \"bacon\",\n        name: \"bacon\",\n        price: 3.0,\n        qtt: 0,\n      },\n      {\n        id: \"carne\",\n        name: \"carne\",\n        price: 2.0,\n        qtt: 0,\n      },\n      {\n        id: \"ovo\",\n        name: \"ovo\",\n        price: 1.0,\n        qtt: 0,\n      },\n      {\n        id: \"cheddar\",\n        name: \"cheddar\",\n        price: 2.0,\n        qtt: 0,\n      },\n      {\n        id: \"cheese\",\n        name: \"cream cheese\",\n        price: 3.0,\n        qtt: 0,\n      },\n      {\n        id: \"catupiry\",\n        name: \"catupiry\",\n        price: 2.0,\n        qtt: 0,\n      },\n      {\n        id: \"mussarela\",\n        name: \"mussarela\",\n        price: 2.0,\n        qtt: 0,\n      },\n      {\n        id: \"presunto\",\n        name: \"presunto\",\n        price: 1.0,\n        qtt: 0,\n      },\n      {\n        id: \"cebola\",\n        name: \"cebola\",\n        price: 1.0,\n        qtt: 0,\n      },\n      {\n        id: \"frango\",\n        name: \"filé de frango\",\n        price: 4.0,\n        qtt: 0,\n      },\n      {\n        id: \"carne\",\n        name: \"filé de carne\",\n        price: 4.0,\n        qtt: 0,\n      },\n    ],\n    addressLink: \"\",\n  };\n\n  setAddressLink(addressLink) {\n    this.setState({ addressLink });\n  }\n}\n\nexport default ProductsContainer;\n","import React from \"react\";\nimport {\n  Button,\n  Form,\n  Header,\n  Icon,\n  Input,\n  Modal,\n  Segment,\n  Table,\n  TextArea,\n} from \"semantic-ui-react\";\nimport { Subscribe } from \"unstated\";\nimport ProductsContainer from \"../containers/ProductsContainer\";\nimport OrderContainer from \"../containers/OrderContainer\";\nimport NumberFormat from \"react-number-format\";\n\nclass AdditionalsModal extends React.Component {\n  state = {\n    open: false,\n    qtt: 0,\n    additionals: [],\n  };\n\n  addToAdditional(additional) {\n    let newAddArr = this.state.additionals;\n\n    if (\n      newAddArr.length <= 0 ||\n      !newAddArr.filter((add) => add.id === additional.id)[0]\n    ) {\n      additional.qtt += 1;\n      newAddArr.push(additional);\n    } else {\n      newAddArr = this.state.additionals.map((add) => {\n        if (add.id === additional.id) add.qtt += 1;\n        add.total = add.price * add.qtt;\n        return add;\n      });\n    }\n\n    this.setState({ additionals: newAddArr });\n  }\n\n  subtractFromAdditional(id) {\n    this.setState({\n      additionals: this.state.additionals.map((add) => {\n        if (add.id === id && add.qtt > 0) {\n          add.qtt -= 1;\n        }\n        return add;\n      }),\n    });\n  }\n\n  showQuantity(id) {\n    let add = this.state.additionals.filter((add) => add.id === id)[0];\n    return add ? add.qtt : 0;\n  }\n\n  handleOpen = () => this.setState({ modalOpen: true });\n\n  handleClose = () => this.setState({ modalOpen: false });\n\n  render() {\n    return (\n      <Subscribe to={[ProductsContainer, OrderContainer]}>\n        {(productContainer, orderContainer) => (\n          <Modal\n            className=\"my-modal\"\n            size=\"mini\"\n            open={this.state.modalOpen}\n            onClose={this.handleClose}\n            trigger={\n              <Button\n                basic\n                color=\"green\"\n                icon=\"cart plus\"\n                size=\"tiny\"\n                onClick={this.handleOpen}\n              />\n            }\n          >\n            <Modal.Content>\n              <Modal.Description>\n                <Header as=\"h4\">Adicionais</Header>\n                <Segment style={{ overflow: \"auto\", maxHeight: 200 }}>\n                  <Table striped textAlign=\"center\" size=\"small\" basic=\"very\">\n                    <Table.Body>\n                      {productContainer.state.additionals.map((additional) => (\n                        <Table.Row>\n                          <Table.Cell>{additional.name}</Table.Cell>\n                          <Table.Cell>\n                            <NumberFormat\n                              value={additional.price}\n                              displayType={\"text\"}\n                              prefix={\"R$ \"}\n                              thousandSeparator={\".\"}\n                              decimalSeparator={\",\"}\n                              fixedDecimalScale={true}\n                              decimalScale={2}\n                              renderText={(value) => <span>{value}</span>}\n                            />\n                          </Table.Cell>\n                          <Table.Cell>\n                            <Button.Group>\n                              <Button\n                                color=\"green\"\n                                size=\"tiny\"\n                                onClick={() => {\n                                  this.addToAdditional(additional);\n                                }}\n                              >\n                                +\n                              </Button>\n                              <Button.Or\n                                text={this.showQuantity(additional.id)}\n                              />\n                              <Button\n                                color=\"red\"\n                                size=\"tiny\"\n                                onClick={() => {\n                                  this.subtractFromAdditional(additional.id);\n                                }}\n                              >\n                                -\n                              </Button>\n                            </Button.Group>\n                          </Table.Cell>\n                        </Table.Row>\n                      ))}\n                    </Table.Body>\n                    <br />\n                  </Table>\n                </Segment>\n\n                <Modal.Actions>\n                  <Button\n                    content=\"adicionar\"\n                    color=\"green\"\n                    icon=\"cart plus\"\n                    size=\"tiny\"\n                    onClick={() => {\n                      orderContainer.addToBag({\n                        id:\n                          orderContainer.state.bag.length +\n                          this.props.item.name,\n                        name: this.props.item.name,\n                        price: this.props.item.price,\n                        additionals: this.state.additionals,\n                      });\n                      this.handleClose();\n                      console.log(this.state.additionals);\n                      this.props.showAlert(this.props.item.name);\n                    }}\n                  />\n                </Modal.Actions>\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nexport default AdditionalsModal;\n","import React from \"react\";\nimport { Button, Card, Icon, Image } from \"semantic-ui-react\";\nimport { Subscribe } from \"unstated\";\nimport OrderContainer from \"../containers/OrderContainer\";\nimport ProductsContainer from \"../containers/ProductsContainer\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport NumberFormat from \"react-number-format\";\nimport AdditionalsModal from \"./AdditionalsModal\";\n\nclass ProductCard extends React.Component {\n  state = {\n    message: \"ovni\",\n    address: \"https://goo.gl/maps/KQ5dSCDLqy2Bv8pU7\",\n  };\n\n  render() {\n    return (\n      <Subscribe to={[OrderContainer]}>\n        {(orderContainer) => (\n          <Card style={{ width: \"255px\" }}>\n            <Image src={this.props.product.image} wrapped ui={false} />\n            <Card.Content>\n              <Card.Header>{this.props.product.name}</Card.Header>\n              <Card.Meta>\n                <NumberFormat\n                  value={this.props.product.price}\n                  displayType={\"text\"}\n                  prefix={\"R$ \"}\n                  thousandSeparator={\".\"}\n                  decimalSeparator={\",\"}\n                  fixedDecimalScale={true}\n                  decimalScale={2}\n                  renderText={(value) => <span>{value}</span>}\n                />\n              </Card.Meta>\n              <Card.Description>\n                {this.props.product.description}\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <AdditionalsModal\n                item={this.props.product}\n                showAlert={this.props.showAlert}\n              />\n            </Card.Content>\n          </Card>\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  product: {},\n};\n\nexport default ProductCard;\n","import React from \"react\";\nimport { Checkbox, Icon, Input, Header, Form } from \"semantic-ui-react\";\nimport OrderContainer from \"../containers/OrderContainer\";\nimport { Subscribe } from \"unstated\";\n\nclass AddressLoader extends React.Component {\n  state = {\n    preencherPeloCep: false,\n    cep: \"\",\n    logradouro: \"\",\n    numero: \"\",\n    complemento: \"\",\n    bairro: \"\",\n    cidade: \"\",\n  };\n\n  async findAddressByCep(cep, state) {\n    let response = await fetch(`https://viacep.com.br/ws/${cep}/json`);\n    let endereco = await response.json();\n\n    state.setCep(endereco.cep);\n    state.setLogradouro(endereco.logradouro);\n    state.setBairro(endereco.bairro);\n    state.setCidade(endereco.localidade);\n  }\n\n  onChangeCheckbox = (evt, data) => {\n    this.setState({ preencherPeloCep: data.checked });\n  };\n\n  render() {\n    return (\n      <Subscribe to={[OrderContainer]}>\n        {(orderContainer) => (\n          <div>\n            <Header as=\"h3\">\n              <Icon name=\"truck\" color=\"brown\" /> Endereço de Entrega\n            </Header>\n            <Form>\n              <Form.Field>\n                <Form.Field>\n                  <Checkbox\n                    label=\"Preencher automaticamente pelo CEP\"\n                    onClick={(evt, data) => this.onChangeCheckbox(evt, data)}\n                  />\n                </Form.Field>\n                <label>CEP</label>\n                <Input\n                  icon={\n                    <Icon\n                      name=\"search\"\n                      inverted\n                      circular\n                      link\n                      onClick={(e) =>\n                        this.findAddressByCep(\n                          orderContainer.state.cep,\n                          orderContainer\n                        )\n                      }\n                    />\n                  }\n                  placeholder=\"Pesquise pelo CEP...\"\n                  onChange={(e) => orderContainer.setCep(e.target.value)}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\")\n                      this.findAddressByCep(e.target.value, orderContainer);\n                  }}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Logradouro</label>\n                <input\n                  value={orderContainer.state.logradouro}\n                  disabled={this.state.preencherPeloCep}\n                  onChange={(e) => orderContainer.setLogradouro(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Cidade</label>\n                <input\n                  value={orderContainer.state.cidade}\n                  disabled={this.state.preencherPeloCep}\n                  onChange={(e) => orderContainer.setCidade(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Bairro</label>\n                <input\n                  value={orderContainer.state.bairro}\n                  disabled={this.state.preencherPeloCep}\n                  onChange={(e) => orderContainer.setBairro(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Número</label>\n                <input\n                  value={orderContainer.state.numero}\n                  onChange={(e) => orderContainer.setNumero(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Complemento</label>\n                <input\n                  value={orderContainer.state.complemento}\n                  onChange={(e) =>\n                    orderContainer.setComplemento(e.target.value)\n                  }\n                />\n              </Form.Field>\n            </Form>\n          </div>\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nexport default AddressLoader;\n","import React from \"react\";\nimport { Icon, Message } from \"semantic-ui-react\";\nimport { ToastContainer } from \"react-toastify\";\n\nconst items = [\n  \"adicione os itens\",\n  \"selecione o endereço de entrega\",\n  \"finalize o pedido\",\n];\n\nconst Toast = () => (\n  <ToastContainer\n    position=\"top-right\"\n    autoClose={3000}\n    hideProgressBar\n    newestOnTop={false}\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable\n    pauseOnHover\n  />\n);\n\nexport default Toast;\n","import React from \"react\";\nimport { Button, Form, Icon, Input, Modal, TextArea } from \"semantic-ui-react\";\nimport { Subscribe } from \"unstated\";\nimport OrderContainer from \"../containers/OrderContainer\";\n\nclass FinishOrderModal extends React.Component {\n  state = { open: false };\n\n  handleOpen = () => this.setState({ modalOpen: true });\n\n  handleClose = () => this.setState({ modalOpen: false });\n\n  render() {\n    return (\n      <Subscribe to={[OrderContainer]}>\n        {(orderContainer) => (\n          <Modal\n            className=\"my-modal\"\n            size=\"mini\"\n            open={this.state.modalOpen}\n            onClose={this.handleClose}\n            trigger={\n              <Button color=\"orange\" onClick={this.handleOpen}>\n                <Icon name=\"box\" /> Fechar sacola\n              </Button>\n            }\n          >\n            <Modal.Content>\n              <Modal.Description>\n                <Form>\n                  <Form.Field>\n                    <label>Entrega para:</label>\n                    <Input\n                      placeholder=\"insira seu nome\"\n                      value={orderContainer.state.orderOwner}\n                      onChange={(event, { value }) =>\n                        orderContainer.setOrderOwner(value)\n                      }\n                    />\n                    <br />\n                    <br />\n                    <TextArea\n                      placeholder=\"Alguma observação ou detalhe do pedido aqui..\"\n                      onChange={(event, { value }) =>\n                        orderContainer.setOrderDetails(value)\n                      }\n                    />\n                  </Form.Field>\n                </Form>\n              </Modal.Description>\n              <br />\n              <Modal.Actions>\n                <Button negative onClick={this.handleClose}>\n                  Cancelar\n                </Button>\n                <Button\n                  color=\"green\"\n                  disabled={\n                    !(\n                      orderContainer.state.bag.length != 0 &&\n                      orderContainer.state.orderOwner &&\n                      orderContainer.isEnderecoPreenchido()\n                    )\n                  }\n                  onClick={() => {\n                    window.open(orderContainer.getOrderLink(), \"_blank\");\n                    orderContainer.clearOrder();\n                    this.handleClose();\n                  }}\n                >\n                  <Icon name=\"whatsapp\" /> Finalizar Pedido\n                </Button>\n              </Modal.Actions>\n            </Modal.Content>\n          </Modal>\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nexport default FinishOrderModal;\n","import React from \"react\";\nimport { Button, Header, Grid, Icon, Image, Table } from \"semantic-ui-react\";\nimport Toast from \"./Toast\";\nimport { toast } from \"react-toastify\";\nimport { Subscribe } from \"unstated\";\nimport OrderContainer from \"../containers/OrderContainer\";\nimport FinishOrderModal from \"./FinishOrderModal\";\nimport NumberFormat from \"react-number-format\";\n\nclass Bag extends React.Component {\n  state = {\n    message: \"ovni\",\n    address: \"https://goo.gl/maps/KQ5dSCDLqy2Bv8pU7\",\n  };\n\n  sumAdditionalsTotal(additionals) {\n    let total = 0;\n    additionals.forEach((add) => (total += add.qtt + add.price));\n    return total;\n  }\n\n  render() {\n    return (\n      <Subscribe to={[OrderContainer]}>\n        {(orderContainer) => (\n          <div>\n            <Header as=\"h3\">\n              <Icon name=\"shopping bag\" color=\"red\" /> Sacola\n            </Header>\n            <Table striped textAlign=\"center\">\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Pedido</Table.HeaderCell>\n                  <Table.HeaderCell>Preço</Table.HeaderCell>\n                  <Table.HeaderCell>Adicionais</Table.HeaderCell>\n                  <Table.HeaderCell>Remover</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                {orderContainer.state.bag.map((item) => (\n                  <Table.Row>\n                    <Table.Cell>{item.name}</Table.Cell>\n                    <Table.Cell>\n                      <NumberFormat\n                        value={item.price}\n                        displayType={\"text\"}\n                        prefix={\"R$ \"}\n                        thousandSeparator={\".\"}\n                        decimalSeparator={\",\"}\n                        fixedDecimalScale={true}\n                        decimalScale={2}\n                        renderText={(value) => <span>{value}</span>}\n                      />\n                    </Table.Cell>\n                    <Table.Cell>\n                      <NumberFormat\n                        value={this.sumAdditionalsTotal(item.additionals)}\n                        displayType={\"text\"}\n                        prefix={\"R$ \"}\n                        thousandSeparator={\".\"}\n                        decimalSeparator={\",\"}\n                        fixedDecimalScale={true}\n                        decimalScale={2}\n                        renderText={(value) => <span>{value}</span>}\n                      />\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Button\n                        icon=\"close\"\n                        onClick={() => {\n                          orderContainer.removeFromBag(item);\n                          toast.info(`${item.name} removido 🍔`, {\n                            position: \"top-right\",\n                            autoClose: 3000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                          });\n                        }}\n                      />\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n                <Table.Row>\n                  <Table.Cell>Total:</Table.Cell>\n                  <Table.Cell>\n                    <b>\n                      <NumberFormat\n                        value={orderContainer.state.total}\n                        displayType={\"text\"}\n                        prefix={\"R$ \"}\n                        thousandSeparator={\".\"}\n                        decimalSeparator={\",\"}\n                        fixedDecimalScale={true}\n                        decimalScale={2}\n                        renderText={(value) => <span>{value}</span>}\n                      />\n                    </b>\n                  </Table.Cell>\n                  <Table.Cell></Table.Cell>\n                  <Table.Cell>\n                    <FinishOrderModal />\n                  </Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n\n            <Toast />\n          </div>\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nexport default Bag;\n","import React from \"react\";\nimport { Icon, Message } from \"semantic-ui-react\";\n\nconst items = [\n  \"adicione os itens\",\n  \"selecione o endereço de entrega\",\n  \"finalize o pedido\",\n];\n\nconst IntroMessage = () => (\n  <Message color=\"cian\">\n    <Message.Header>\n      <Icon name=\"shopping cart\" color=\"green\" /> Como fazer seu pedido em 3\n      simples passos\n    </Message.Header>\n    <Message.List>\n      <Message.Item>Adicione os itens a sacola</Message.Item>\n      <Message.Item>Selecione o endereço de entrega pelo CEP</Message.Item>\n      <Message.Item>Finalize o pedido</Message.Item>\n    </Message.List>\n  </Message>\n);\n\nexport default IntroMessage;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Card, Container, Divider, Header, Icon } from \"semantic-ui-react\";\nimport Banner from \"./components/Banner\";\nimport ProductCard from \"./components/ProductCard\";\nimport AddressLoader from \"./components/AddressLoader\";\nimport Bag from \"./components/Bag\";\nimport IntroMessage from \"./components/IntroMessage\";\nimport Toast from \"./components/Toast\";\nimport { Subscribe } from \"unstated\";\nimport ProductsContainer from \"./containers/ProductsContainer\";\nimport { toast, ToastContainer } from \"react-toastify\";\n\nclass App extends React.Component {\n  orderAdded(name) {\n    toast.success(`${name} adicionado 🍔`, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n\n  render() {\n    return (\n      <Subscribe to={[ProductsContainer]}>\n        {(productsContainer) => (\n          <div className=\"App\">\n            <Banner />\n            <Container>\n              <IntroMessage />\n              <Header as=\"h3\">\n                <Icon name=\"food\" color=\"orange\" /> Adicione o(s) item(s)\n                desejado(s)\n              </Header>\n              <Card.Group centered>\n                {productsContainer.state.products.map((product, index) => (\n                  <ProductCard\n                    id={index}\n                    product={product}\n                    showAlert={this.orderAdded}\n                  />\n                ))}\n              </Card.Group>\n            </Container>\n            <Divider />\n            <AddressLoader />\n            <Divider />\n            <Bag />\n\n            <Toast />\n          </div>\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {Provider} from 'unstated'\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}