{"ast":null,"code":"var _jsxFileName = \"/media/tomrlh/Ubuntu_Data/tomrlh/Documents/Programming_Projects/Freelancers/deliverydofran6/src/components/Bag.js\";\nimport React from \"react\";\nimport { Button, Header, Grid, Icon, Image, Table } from \"semantic-ui-react\";\nimport Toast from \"./Toast\";\nimport { toast } from \"react-toastify\";\nimport { Subscribe } from \"unstated\";\nimport OrderContainer from \"../containers/OrderContainer\";\nimport FinishOrderModal from \"./FinishOrderModal\";\nimport NumberFormat from \"react-number-format\";\n\nclass Bag extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"ovni\",\n      address: \"https://goo.gl/maps/KQ5dSCDLqy2Bv8pU7\"\n    };\n  }\n\n  sumAdditionalsTotal(additionals) {\n    let total = 0;\n    additionals.forEach(add => total += add.qtt + add.price);\n    return total;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Subscribe, {\n      to: [OrderContainer],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, orderContainer => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"shopping bag\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }), \" Sacola\"), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, \"Pedido\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }, \"Pre\\xE7o\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, \"Adicionais\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, \"Remover\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, orderContainer.state.bag.map(item => /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, item.name), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: item.price,\n      displayType: \"text\",\n      prefix: \"R$ \",\n      thousandSeparator: \".\",\n      decimalSeparator: \",\",\n      fixedDecimalScale: true,\n      decimalScale: 2,\n      renderText: value => /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 48\n        }\n      }, value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: this.sumAdditionalsTotal(item.additionals),\n      displayType: \"text\",\n      prefix: \"R$ \",\n      thousandSeparator: \".\",\n      decimalSeparator: \",\",\n      fixedDecimalScale: true,\n      decimalScale: 2,\n      renderText: value => /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 48\n        }\n      }, value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: \"close\",\n      onClick: () => {\n        orderContainer.removeFromBag(item);\n        toast.info(`${item.name} removido 🍔`, {\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, \"Total:\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: orderContainer.state.total,\n      displayType: \"text\",\n      prefix: \"R$ \",\n      thousandSeparator: \".\",\n      decimalSeparator: \",\",\n      fixedDecimalScale: true,\n      decimalScale: 2,\n      renderText: value => /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 48\n        }\n      }, value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FinishOrderModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(Toast, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Bag;","map":{"version":3,"sources":["/media/tomrlh/Ubuntu_Data/tomrlh/Documents/Programming_Projects/Freelancers/deliverydofran6/src/components/Bag.js"],"names":["React","Button","Header","Grid","Icon","Image","Table","Toast","toast","Subscribe","OrderContainer","FinishOrderModal","NumberFormat","Bag","Component","state","message","address","sumAdditionalsTotal","additionals","total","forEach","add","qtt","price","render","orderContainer","bag","map","item","name","value","removeFromBag","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Header, Grid, Icon, Image, Table } from \"semantic-ui-react\";\nimport Toast from \"./Toast\";\nimport { toast } from \"react-toastify\";\nimport { Subscribe } from \"unstated\";\nimport OrderContainer from \"../containers/OrderContainer\";\nimport FinishOrderModal from \"./FinishOrderModal\";\nimport NumberFormat from \"react-number-format\";\n\nclass Bag extends React.Component {\n  state = {\n    message: \"ovni\",\n    address: \"https://goo.gl/maps/KQ5dSCDLqy2Bv8pU7\",\n  };\n\n  sumAdditionalsTotal(additionals) {\n    let total = 0;\n    additionals.forEach((add) => (total += add.qtt + add.price));\n    return total;\n  }\n\n  render() {\n    return (\n      <Subscribe to={[OrderContainer]}>\n        {(orderContainer) => (\n          <div>\n            <Header as=\"h3\">\n              <Icon name=\"shopping bag\" color=\"red\" /> Sacola\n            </Header>\n            <Table striped textAlign=\"center\">\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Pedido</Table.HeaderCell>\n                  <Table.HeaderCell>Preço</Table.HeaderCell>\n                  <Table.HeaderCell>Adicionais</Table.HeaderCell>\n                  <Table.HeaderCell>Remover</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                {orderContainer.state.bag.map((item) => (\n                  <Table.Row>\n                    <Table.Cell>{item.name}</Table.Cell>\n                    <Table.Cell>\n                      <NumberFormat\n                        value={item.price}\n                        displayType={\"text\"}\n                        prefix={\"R$ \"}\n                        thousandSeparator={\".\"}\n                        decimalSeparator={\",\"}\n                        fixedDecimalScale={true}\n                        decimalScale={2}\n                        renderText={(value) => <span>{value}</span>}\n                      />\n                    </Table.Cell>\n                    <Table.Cell>\n                      <NumberFormat\n                        value={this.sumAdditionalsTotal(item.additionals)}\n                        displayType={\"text\"}\n                        prefix={\"R$ \"}\n                        thousandSeparator={\".\"}\n                        decimalSeparator={\",\"}\n                        fixedDecimalScale={true}\n                        decimalScale={2}\n                        renderText={(value) => <span>{value}</span>}\n                      />\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Button\n                        icon=\"close\"\n                        onClick={() => {\n                          orderContainer.removeFromBag(item);\n                          toast.info(`${item.name} removido 🍔`, {\n                            position: \"top-right\",\n                            autoClose: 3000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                          });\n                        }}\n                      />\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n                <Table.Row>\n                  <Table.Cell>Total:</Table.Cell>\n                  <Table.Cell>\n                    <b>\n                      <NumberFormat\n                        value={orderContainer.state.total}\n                        displayType={\"text\"}\n                        prefix={\"R$ \"}\n                        thousandSeparator={\".\"}\n                        decimalSeparator={\",\"}\n                        fixedDecimalScale={true}\n                        decimalScale={2}\n                        renderText={(value) => <span>{value}</span>}\n                      />\n                    </b>\n                  </Table.Cell>\n                  <Table.Cell></Table.Cell>\n                  <Table.Cell>\n                    <FinishOrderModal />\n                  </Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n\n            <Toast />\n          </div>\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nexport default Bag;\n"]},"metadata":{},"sourceType":"module"}